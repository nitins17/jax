# Inherit default environment variables.
source ci/envs/default

# Enable jaxlib build.
export JAXCI_BUILD_JAXLIB_ENABLE="1"

os=$(uname -s | awk '{print tolower($0)}')
arch=$(uname -m)

# Linux x86 specifc settings
if [[ $os == "linux" ]] && [[ $arch == "x86_64" ]]; then
  # Enable wheel audit to check for manylinux compliance.
  export JAXCI_WHEEL_AUDIT_ENABLE=1

  # Note Python version of the container does not matter. JAX supports hermetic
  # Python and thus the actual Python version of the artifact is controlled by
  # the value set in `HERMETIC_PYTHON_VERSION`
  export JAXCI_DOCKER_IMAGE="tensorflow/build:2.18-python3.10"
fi

# Linux Aarch64 specifc settings
if [[ $os == "linux" ]] && [[ $arch == "x86_64" ]]; then
  # Enable wheel audit to check for manylinux compliance.
  export JAXCI_WHEEL_AUDIT_ENABLE=1
  export JAXCI_DOCKER_IMAGE="us-central1-docker.pkg.dev/tensorflow-sigs/tensorflow/build-arm64:tf-2-18-multi-python"
fi

# Windows specific settings
if [[ $os =~ "msys_nt"]]; then
  export JAXCI_DOCKER_IMAGE="gcr.io/tensorflow-testing/tf-win2019-rbe@sha256:1082ef4299a72e44a84388f192ecefc81ec9091c146f507bc36070c089c0edcc"

  # While we run these scripts in Cygwin on Windows, 
  # the path needs to be in Windows format.
  export JAXCI_GIT_DIR=$(cygpath -w "/tmpfs/src/github/jax")
  export JAXCI_OUTPUT_DIR=$(cygpath -w /c/jax/dist)
  export JAXCI_CONTAINER_WORK_DIR=$(cygpath -w /c/jax/)

  if [[ -n $JAXCI_XLA_GIT_DIR ]]; then
    export JAXCI_XLA_GIT_DIR=$(cygpath -w "$JAXCI_XLA_GIT_DIR")
  fi
fi

# Mac specific settings
if [[ $os == "macos" ]]; then
  # Mac builds do not run in Docker.
  export JAXCI_USE_DOCKER=0
fi